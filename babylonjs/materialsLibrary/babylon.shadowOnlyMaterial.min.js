!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("babylonjs")):"function"==typeof define&&define.amd?define("babylonjs-materials",["babylonjs"],t):"object"==typeof exports?exports["babylonjs-materials"]=t(require("babylonjs")):e.MATERIALS=t(e.BABYLON)}("undefined"!=typeof self?self:"undefined"!=typeof global?global:this,(e=>(()=>{"use strict";var t={520:t=>{t.exports=e}},n={};function i(e){var r=n[e];if(void 0!==r)return r.exports;var o=n[e]={exports:{}};return t[e](o,o.exports,i),o.exports}i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};return(()=>{i.d(r,{default:()=>d});var e={};i.r(e),i.d(e,{ShadowOnlyMaterial:()=>l});var t={};i.r(t),i.d(t,{ShadowOnlyMaterial:()=>l});var n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},n(e,t)};function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function i(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)}Object.create,Object.create,"function"==typeof SuppressedError&&SuppressedError;var a=i(520);a.ShaderStore.ShadersStore.shadowOnlyPixelShader="precision highp float;uniform vec4 vEyePosition;uniform float alpha;uniform vec3 shadowColor;varying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#include<helperFunctions>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#include<lightsFragmentFunctions>\n#include<shadowsFragmentFunctions>\n#include<clipPlaneFragmentDeclaration>\n#include<fogFragmentDeclaration>\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\n#include<clipPlaneFragment>\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);\n#ifdef NORMAL\nvec3 normalW=normalize(vNormalW);\n#else\nvec3 normalW=vec3(1.0,1.0,1.0);\n#endif\nvec3 diffuseBase=vec3(0.,0.,0.);lightingInfo info;float shadow=1.;float glossiness=0.;float aggShadow=0.;float numLights=0.;\n#include<lightFragment>[0..1]\nvec4 color=vec4(shadowColor,(1.0-clamp(shadow,0.,1.))*alpha);\n#include<fogFragment>\ngl_FragColor=color;\n#include<imageProcessingCompatibility>\n#define CUSTOM_FRAGMENT_MAIN_END\n}";a.ShaderStore.ShadersStore.shadowOnlyVertexShader="precision highp float;attribute vec3 position;\n#ifdef NORMAL\nattribute vec3 normal;\n#endif\n#include<bonesDeclaration>\n#include<bakedVertexAnimationDeclaration>\n#include<instancesDeclaration>\nuniform mat4 view;uniform mat4 viewProjection;\n#ifdef POINTSIZE\nuniform float pointSize;\n#endif\nvarying vec3 vPositionW;\n#ifdef NORMAL\nvarying vec3 vNormalW;\n#endif\n#ifdef VERTEXCOLOR\nvarying vec4 vColor;\n#endif\n#include<clipPlaneVertexDeclaration>\n#include<fogVertexDeclaration>\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include<instancesVertex>\n#include<bonesVertex>\n#include<bakedVertexAnimation>\nvec4 worldPos=finalWorld*vec4(position,1.0);gl_Position=viewProjection*worldPos;vPositionW=vec3(worldPos);\n#ifdef NORMAL\nvNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\n#endif\n#include<clipPlaneVertex>\n#include<fogVertex>\n#include<shadowsVertex>[0..maxSimultaneousLights]\n#if defined(POINTSIZE) && !defined(WEBGPU)\ngl_PointSize=pointSize;\n#endif\n#define CUSTOM_VERTEX_MAIN_END\n}\n";var s=function(e){function t(){var t=e.call(this)||this;return t.CLIPPLANE=!1,t.CLIPPLANE2=!1,t.CLIPPLANE3=!1,t.CLIPPLANE4=!1,t.CLIPPLANE5=!1,t.CLIPPLANE6=!1,t.POINTSIZE=!1,t.FOG=!1,t.NORMAL=!1,t.NUM_BONE_INFLUENCERS=0,t.BonesPerMesh=0,t.INSTANCES=!1,t.IMAGEPROCESSINGPOSTPROCESS=!1,t.SKIPFINALCOLORCLAMP=!1,t.rebuild(),t}return o(t,e),t}(a.MaterialDefines),l=function(e){function t(t,n){var i=e.call(this,t,n)||this;return i._needAlphaBlending=!0,i.shadowColor=a.Color3.Black(),i}return o(t,e),t.prototype.needAlphaBlending=function(){return this._needAlphaBlending},t.prototype.needAlphaTesting=function(){return!1},t.prototype.getAlphaTestTexture=function(){return null},Object.defineProperty(t.prototype,"activeLight",{get:function(){return this._activeLight},set:function(e){this._activeLight=e},enumerable:!1,configurable:!0}),t.prototype._getFirstShadowLightForMesh=function(e){for(var t=0,n=e.lightSources;t<n.length;t++){var i=n[t];if(i.shadowEnabled)return i}return null},t.prototype.isReadyForSubMesh=function(e,t,n){var i;if(this.isFrozen&&t.effect&&t.effect._wasPreviouslyReady&&t.effect._wasPreviouslyUsingInstances===n)return!0;t.materialDefines||(t.materialDefines=new s);var r=t.materialDefines,o=this.getScene();if(this._isReadyForSubMesh(t))return!0;var l=o.getEngine();if(this._activeLight)for(var f=0,c=e.lightSources;f<c.length;f++){var d=c[f];if(d.shadowEnabled){if(this._activeLight===d)break;var u=e.lightSources.indexOf(this._activeLight);-1!==u&&(e.lightSources.splice(u,1),e.lightSources.splice(0,0,this._activeLight));break}}a.MaterialHelper.PrepareDefinesForFrameBoundValues(o,l,this,r,!!n),a.MaterialHelper.PrepareDefinesForMisc(e,o,!1,this.pointsCloud,this.fogEnabled,this._shouldTurnAlphaTestOn(e),r),r._needNormals=a.MaterialHelper.PrepareDefinesForLights(o,e,r,!1,1);var h=null===(i=this._getFirstShadowLightForMesh(e))||void 0===i?void 0:i.getShadowGenerator();if(this._needAlphaBlending=!0,h&&h.getClassName&&"CascadedShadowGenerator"===h.getClassName()){var p=h;this._needAlphaBlending=!p.autoCalcDepthBounds}if(a.MaterialHelper.PrepareDefinesForAttributes(e,r,!1,!0),r.isDirty){r.markAsProcessed(),o.resetCachedMaterial();var v=new a.EffectFallbacks;r.FOG&&v.addFallback(1,"FOG"),a.MaterialHelper.HandleFallbacksForShadows(r,v,1),r.NUM_BONE_INFLUENCERS>0&&v.addCPUSkinningFallback(0,e),r.IMAGEPROCESSINGPOSTPROCESS=o.imageProcessingConfiguration.applyByPostProcess;var g=[a.VertexBuffer.PositionKind];r.NORMAL&&g.push(a.VertexBuffer.NormalKind),a.MaterialHelper.PrepareAttributesForBones(g,e,r,v),a.MaterialHelper.PrepareAttributesForInstances(g,r);var m=r.toString(),S=["world","view","viewProjection","vEyePosition","vLightsType","vFogInfos","vFogColor","pointSize","alpha","shadowColor","mBones"],y=new Array,P=new Array;(0,a.addClipPlaneUniforms)(S),a.MaterialHelper.PrepareUniformsAndSamplersList({uniformsNames:S,uniformBuffersNames:P,samplers:y,defines:r,maxSimultaneousLights:1}),t.setEffect(o.getEngine().createEffect("shadowOnly",{attributes:g,uniformsNames:S,uniformBuffersNames:P,samplers:y,defines:m,fallbacks:v,onCompiled:this.onCompiled,onError:this.onError,indexParameters:{maxSimultaneousLights:1}},l),r,this._materialContext)}return!(!t.effect||!t.effect.isReady()||(r._renderId=o.getRenderId(),t.effect._wasPreviouslyReady=!0,t.effect._wasPreviouslyUsingInstances=!!n,0))},t.prototype.bindForSubMesh=function(e,t,n){var i=this.getScene(),r=n.materialDefines;if(r){var o=n.effect;if(o){if(this._activeEffect=o,this.bindOnlyWorldMatrix(e),this._activeEffect.setMatrix("viewProjection",i.getTransformMatrix()),a.MaterialHelper.BindBonesParameters(t,this._activeEffect),this._mustRebind(i,o)&&((0,a.bindClipPlane)(o,this,i),this.pointsCloud&&this._activeEffect.setFloat("pointSize",this.pointSize),this._activeEffect.setFloat("alpha",this.alpha),this._activeEffect.setColor3("shadowColor",this.shadowColor),i.bindEyePosition(o)),i.lightsEnabled){a.MaterialHelper.BindLights(i,t,this._activeEffect,r,1);var s=this._getFirstShadowLightForMesh(t);s&&(s._renderId=-1)}(i.fogEnabled&&t.applyFog&&i.fogMode!==a.Scene.FOGMODE_NONE||r.SHADOWCSM0)&&this._activeEffect.setMatrix("view",i.getViewMatrix()),a.MaterialHelper.BindFogParameters(i,t,this._activeEffect),this._afterBind(t,this._activeEffect)}}},t.prototype.clone=function(e){var n=this;return a.SerializationHelper.Clone((function(){return new t(e,n.getScene())}),this)},t.prototype.serialize=function(){var t=e.prototype.serialize.call(this);return t.customType="BABYLON.ShadowOnlyMaterial",t},t.prototype.getClassName=function(){return"ShadowOnlyMaterial"},t.Parse=function(e,n,i){return a.SerializationHelper.Parse((function(){return new t(e.name,n)}),e,n,i)},t}(a.PushMaterial);(0,a.RegisterClass)("BABYLON.ShadowOnlyMaterial",l);var f=void 0!==i.g?i.g:"undefined"!=typeof window?window:void 0;if(void 0!==f)for(var c in e)f.BABYLON[c]=e[c];const d=t})(),r.default})()));
//# sourceMappingURL=babylon.shadowOnlyMaterial.min.js.map